// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concrete.Islem", b =>
                {
                    b.Property<int>("IslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IslemAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IslemDurum")
                        .HasColumnType("bit");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int?>("ServisID")
                        .HasColumnType("int");

                    b.HasKey("IslemID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("ServisID");

                    b.ToTable("IslemVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KategoriDurum")
                        .HasColumnType("bit");

                    b.HasKey("KategoriID");

                    b.ToTable("KategoriVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KullaniciDurum")
                        .HasColumnType("bit");

                    b.Property<string>("KullaniciIsim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSoyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciYetki")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.ToTable("KullaniciVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Marka", b =>
                {
                    b.Property<int>("MarkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MarkaAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MarkaDurum")
                        .HasColumnType("bit");

                    b.HasKey("MarkaID");

                    b.ToTable("MarkaVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MusteriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MusteriDurum")
                        .HasColumnType("bit");

                    b.Property<string>("MusteriSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriTel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriTel2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriID");

                    b.ToTable("MusteriVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Servis", b =>
                {
                    b.Property<int>("ServisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<string>("ServisAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ServisDurum")
                        .HasColumnType("bit");

                    b.Property<bool>("ServisSonuc")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ServisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ServisID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("MarkaID");

                    b.HasIndex("MusteriID");

                    b.ToTable("ServisVT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Islem", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kullanici", "Kullanici")
                        .WithMany("IslemVT")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Servis", "Servis")
                        .WithMany("IslemVTT")
                        .HasForeignKey("ServisID");

                    b.Navigation("Kullanici");

                    b.Navigation("Servis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Servis", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kategori", "Kategori")
                        .WithMany("ServisVTT")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Kullanici", "Kullanici")
                        .WithMany("ServisVTT")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Marka", "Marka")
                        .WithMany("ServisVTT")
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Musteri", "Musteri")
                        .WithMany("ServisVTT")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");

                    b.Navigation("Marka");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kategori", b =>
                {
                    b.Navigation("ServisVTT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kullanici", b =>
                {
                    b.Navigation("IslemVT");

                    b.Navigation("ServisVTT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Marka", b =>
                {
                    b.Navigation("ServisVTT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Musteri", b =>
                {
                    b.Navigation("ServisVTT");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Servis", b =>
                {
                    b.Navigation("IslemVTT");
                });
#pragma warning restore 612, 618
        }
    }
}
